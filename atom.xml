<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://zhongxingdou.github.io/blog/</id>
    <title>xingdou&apos;s blog</title>
    <updated>2022-02-26T02:44:32.475Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://zhongxingdou.github.io/blog/"/>
    <link rel="self" href="http://zhongxingdou.github.io/blog/atom.xml"/>
    <subtitle>一个程序员的博客</subtitle>
    <logo>http://zhongxingdou.github.io/blog/images/avatar.png</logo>
    <icon>http://zhongxingdou.github.io/blog/favicon.ico</icon>
    <rights>All rights reserved 2022, xingdou&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[我想做一家朝九晚五四天的慢公司]]></title>
        <id>http://zhongxingdou.github.io/blog/post/wo-xiang-zuo-yi-jia-zhao-jiu-wan-wu-si-tian-de-man-gong-si/</id>
        <link href="http://zhongxingdou.github.io/blog/post/wo-xiang-zuo-yi-jia-zhao-jiu-wan-wu-si-tian-de-man-gong-si/">
        </link>
        <updated>2021-07-01T03:15:06.000Z</updated>
        <content type="html"><![CDATA[<p>自去年4月中旬从 BIGO 公司离职以来，我一直在做一款在线的软件——“火龙果H5搭建平台”（以下称火龙果）。经过一年的开发，目前已进入试用阶段，兼职的前端同学也仿照一些知名App内的营销页面搭建了六个页面。接下来7月份的目标是实现发布，即构建可脱离平台运行的页面并发布到 CDN 上，这样就基本可以用了。公司注册、商标申请等开办公司要办理的事项这个月也会陆续开始。</p>
<p>在创业之前，我在唯品会、BIGO 作为前端架构做过两个类似项目，虽然做得不算太好，但经验着实积累了不少，刚好在公司绩效也不好，所以就决定出来自己做。当然，还会有不想再卷，不想被 PUA，年龄大了再不拼一把就要被淘汰之类的原因。</p>
<p>一年多以来，我没有很拼。上午我就是睡到自然醒、然后做健身、写字之类的自我放松活动，中午或下午才到办公室（朋友公司免费工位）。工作时间看状态，如果状态好，可能工作到晚上10点半，状态不好，就9点左右。目前开发了的代码项目上有十几个，行数上估计3.5~4万左右，工作成果这么多，我很满意自己。另外，陆陆续续我也找到了几个朋友兼职做前端、后端、运维、设计。我有个上小学一年级的孩子，如果那天没人接的话我就在家办公，然后去接他。</p>
<p>工作上，作为多年前端架构，我习惯于做东西要有理念和架构，没有经验的做之前先用笔划划思路，所以还是有一定规划性的。我不会给自己订开始和结束日期，但我有用看板，有做任务分类和优先级标记。我每一周结合代码提交日志来写周报。代码长了、有重复的地方或者要实现的更弹性、更简单，我就随时或当作单独任务去做。在可维护和进度之间做权衡也不是那么难，没有压力，花园的草长得太长了，可以剪剪，但是还是自然点好，也不是非得整整齐齐。</p>
<p>我每个月要还房贷，房贷银行把我还了的钱又借给我，我又拿去还房贷。所以目前还没有找朋友借钱，项目上用的钱也不多，还不到一万吧，所以可以忽略不计。可能是之前借钱买房的压力太大，或者觉得自己上班也能一年好几十万，所以现在这点负债对我没太大压力，不是一点没有，但我完全没“感觉”到它能太影响我的心情。</p>
<p>我觉得我再也不想要回到过去上班的日子，我相信别的公司努力和奋斗会比我的做得更好的，不过这与我无关，我自己的孩子，我只想天然放养，自然成长。我从来没有努力和奋斗过，努力和奋斗这两词被污染了，我只想说，我是一个坚持的人。我没读高中，快快乐乐的在中专玩了三年，又满心欢喜的边打工边自学六年做了程序员，朋友帮忙介绍进了某淘、后来在广州又进了前同事当主管的公司，一路下来还算顺利，但我并不开心，身体亚健康，我觉得还是做程序员之前比较开心。</p>
<p>从朋友那看到《重来3：跳出疯狂的忙碌》那本书，好像是 DHH（RubyOnRails 作者） 写的，刚好当年我做过 RubyOnRails 程序员，所以还是很崇拜这个程序员，我觉得书里讲得很对，不知道作者的，还以为是一个人在写理想国，是一个员工臆想写的，可他确确实实是一个老板写的。也许创业是要先做回自己，自己快乐、健康才可能做好项目，然后找来志趣相同的朋友，一起再实践做公司这个产品，公司这个产品好了，给用户用的产品才能好，两者得共同进步。</p>
<p>程序员的工作环境应该安静，不被随时打扰，要有足够的生活和休闲，工作占一半可能都太多，应该是三分之一。但一个真的热爱自己喜欢的事情的人，如果有没有解决的问题，他也许睡觉都在为这个事情思考。做一个小公司，小团队，小产品，人的能力和精力有限，欲望让我们很累，人活一世，真的不应该这么匆忙。</p>
<p>我的孩子，我不想教育他，我不想他做作业，他做错了题目，我夸他字好。他现在有自己专注想玩的事，我也和他一起玩电脑游戏，看搞笑视频。他敢打我，敢恶作剧我，我喜欢他不把我当爸爸。我不想做他的榜样。</p>
<p>不赚大钱就不配活得很好么？也就只能想想么？我不知道你们如何，我想不来这么多，我觉得我一直很顺，不顺的事，过去了我也就是觉得不是大事。我在做自己热爱的事，我不太想赚钱的事，我只想我的代码多了没有，完善了没有，稳定了没有。做好一个东西不是一天两天，三年五年也是正常（对比我六年才做到程序员，就知道我不是聪明人）。慢才是好生活。</p>
<p>欢迎志趣相同的朋友聊聊。微信 zhongxingdou</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[安静的力量]]></title>
        <id>http://zhongxingdou.github.io/blog/post/an-jing-de-li-liang/</id>
        <link href="http://zhongxingdou.github.io/blog/post/an-jing-de-li-liang/">
        </link>
        <updated>2020-09-19T03:35:52.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="http://zhongxingdou.github.io/blog//post-images/1600487595350.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[牛]]></title>
        <id>http://zhongxingdou.github.io/blog/post/niu/</id>
        <link href="http://zhongxingdou.github.io/blog/post/niu/">
        </link>
        <updated>2020-09-19T03:33:38.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="http://zhongxingdou.github.io/blog//post-images/1600486433090.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Safari 浏览器扩展：Page QRCode]]></title>
        <id>http://zhongxingdou.github.io/blog/post/safari-page-qrcode-extension/</id>
        <link href="http://zhongxingdou.github.io/blog/post/safari-page-qrcode-extension/">
        </link>
        <updated>2020-07-02T05:08:20.000Z</updated>
        <content type="html"><![CDATA[<p><img src="http://zhongxingdou.github.io/blog//post-images/1593666712183.png" alt="" loading="lazy"><br>
Page QRCode 是一款 Safari 浏览器扩展， 用于生成网页地址的 QRCode， 从而方便用户将网页地址以图片的形式进行分享</p>
<p>Page QRCode is a Safari browser extension, it used to generate QRCode of webpage address for easily share with image.</p>
<h2 id="安装-installing">安装 Installing</h2>
<ol>
<li>
<p>首先打开 Safari 浏览器</p>
<p>Open Safari Browser</p>
</li>
<li>
<p>从菜单 “Safari浏览器”  中选择 “Safari 浏览器扩展...”，这将自动打开 App Store 程序并进入 “Safari 浏览器扩展” 分类</p>
<p>Choose the item &quot;Safari browser extension...&quot; from the menu of Safari browser and  the App Store will open the &quot;Safari browser extension&quot; category page.</p>
</li>
<li>
<p>找到 “Page QRCode” 即可进行购买安装.</p>
<p>Find out &quot;Page QRCode&quot; and install.</p>
</li>
</ol>
<h2 id="反馈问题-consultation-and-suggest">反馈问题 Consultation and suggest</h2>
<p>如果您想咨询有关 Page QRCode 的问题，请邮件我 zhongxingdou@gmail.com。谢谢。</p>
<p>Welcome to send email (zhongxingdou@gmail.com) to me for any question or suggest about the Page QRCode extension. Thank you.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GraphQL 学习笔记]]></title>
        <id>http://zhongxingdou.github.io/blog/post/graphql-xue-xi-bi-ji/</id>
        <link href="http://zhongxingdou.github.io/blog/post/graphql-xue-xi-bi-ji/">
        </link>
        <updated>2020-05-21T07:18:08.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>GraphQL 是基于图理论的一种用于查询与修改数据的协议</p>
</blockquote>
<h2 id="基本类型与表达式">基本类型与表达式</h2>
<ul>
<li><strong>String</strong> &quot;hello&quot;</li>
<li><strong>Float</strong> 8888.88</li>
<li><strong>Boolean</strong> true false</li>
<li><strong>ID</strong></li>
<li><strong>enum</strong> Animal { Monkey, Mouse }</li>
<li>参数 <strong>$var</strong></li>
<li>数组 <strong>[item]</strong></li>
<li>不可空类型 <strong>Photo!</strong> ，值不能为 <strong>null</strong></li>
<li>不可空数组 <strong>[item]!</strong>，数组至少有1项才合法</li>
<li><strong>[item!]!</strong>，数组至少有1项，数组成员不能为 <strong>null</strong></li>
<li>标量 <strong>scalar</strong> DateTime，用于扩展基本类型</li>
<li><strong>union</strong> SchoolPeople = Teacher <strong>|</strong> Student，表示类型的值可以是提供的类型其中之一</li>
<li><strong>...on</strong> Teacher { course }，引用类型的部分成员</li>
</ul>
<h2 id="类型">类型</h2>
<h3 id="定义类型">定义类型</h3>
<pre><code class="language-GraphQL">type User {
    name: String!
    gender: Boolean!
    interest: String
}
</code></pre>
<h3 id="类型间引用">类型间引用</h3>
<pre><code class="language-GraphQL">type User{
​	favorites: [Favorite!]
​	friends: [Friendship!]!
}

type Favorite {
​	name: String!
}

type FriendShip {
​	friend_a: User!
​	friend_b: User!
}
</code></pre>
<h3 id="定义接口">定义接口</h3>
<p>与 type 定义的类型类似，但是可被继承（实现）</p>
<pre><code class="language-GraphQL">interface People {
​	name: String!
}

type Worker implements People {
​	name: String!
​	position: String!
}
</code></pre>
<h3 id="输入类型">输入类型</h3>
<p>与 type 定义的类型类似，但是专用于<strong>参数</strong></p>
<pre><code class="language-GraphQL">input Message {
​	title: String
​	content: String!
}
</code></pre>
<h2 id="标量">标量</h2>
<h3 id="声明标量">声明标量</h3>
<p>scalar DateTime</p>
<h3 id="实现标量">实现标量</h3>
<pre><code class="language-js">new GraphQLScalarType {
    name: 'DateTime',
    description: 'A valid date time value.'

    parseValue: value =&gt; new Date(value),                  // 查询变量的值将用它转换
    serialize: value =&gt; new Date(value).toISOString(),   // 确保返回值有统一的格式

    parseLiteral: ast =&gt; ast.value // 查询字面量最先被解析为AST时，可以转换它的值，如果需要
}
</code></pre>
<h2 id="查询">查询</h2>
<ol>
<li>定义查询</li>
</ol>
<pre><code class="language-GraphQL">type Query {
    allUsers: [User!]!
}
</code></pre>
<ol start="2">
<li>使用查询</li>
</ol>
<pre><code class="language-GraphQL">query allUsers {
​	aliasName: name
​	friends(genderParam: FEMALE) {
​		name
​		gender
​	}

​	...on work {
​		position
​		office
​	},	

​	...on study {
​		grade
​		school
​	}
}
</code></pre>
<h3 id="片段-fragment">片段 fragment</h3>
<blockquote>
<p>避免查询中重复声明</p>
</blockquote>
<pre><code class="language-GraphQL">fragment userInfo on User {
​	name
    gender
}
</code></pre>
<h3 id="订阅-subscription">订阅 subscription</h3>
<ol>
<li>定义订阅</li>
</ol>
<pre><code class="language-GraphQL">type Subscription {
    newUser: User!
}
</code></pre>
<ol start="2">
<li>使用订阅</li>
</ol>
<pre><code class="language-GraphQL">subscription {
    newUser {
        id
        name
    }
}
</code></pre>
<h3 id="变更-mutation">变更 mutation</h3>
<ol>
<li>定义变更</li>
</ol>
<pre><code class="language-GraphQL">type Mutation  {
    postUser(name: String): User!
}
</code></pre>
<ol start="2">
<li>使用变更</li>
</ol>
<pre><code class="language-GraphQL">mutation newUser($name: String) {
    postUser(name: $name) {
        id
        name
        createdAt
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sequelize 关系映射]]></title>
        <id>http://zhongxingdou.github.io/blog/post/sequelize-guan-xi-ying-she/</id>
        <link href="http://zhongxingdou.github.io/blog/post/sequelize-guan-xi-ying-she/">
        </link>
        <updated>2020-05-06T04:54:05.000Z</updated>
        <content type="html"><![CDATA[<h2 id="belongsto">belongsTo</h2>
<pre><code class="language-js"> models.Page.belongsTo(models.User, {
    as: 'createUser',
    foreignKey: 'creator',
});

models.Page.belongsTo(models.User, {
    as: 'operateUser',
    foreignKey: 'operator'
});

models.Page.findOne({
    where: {id: 1}, 
    include: 'createUser'
}).then(p =&gt; console.log(p.createUser.name))

 models.Page.findOne({where: {id: 1}, include: 'createUser'}).then(p =&gt; console.log(p.toJSON()))

 { seo: null,
  style: null,
  props: null,
  id: 1,
  title: 'test1',
  description: 'test1 desc',
  creator: 1,
  operator: null,
  createdAt: 2020-04-30T11:50:14.586Z,
  updatedAt: 2020-04-30T11:50:14.586Z,
  createUser:
   { id: 1,
     name: 'liuxing',
     email: 'zhongxingdou@gmail.com',
     password:
      '14ff096758d8b24276d9ed28088fbf9ff963c5109e7150118f3b6243a1b54874',
     createdAt: 2020-04-27T02:44:49.848Z,
     updatedAt: 2020-04-27T02:44:49.848Z } }

models.Page.findAll({include: 'createUser'})
.then(ps =&gt; console.log(ps[0].createUser.name))
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[代码在干什么？]]></title>
        <id>http://zhongxingdou.github.io/blog/post/what-code-do/</id>
        <link href="http://zhongxingdou.github.io/blog/post/what-code-do/">
        </link>
        <updated>2020-04-16T03:32:05.000Z</updated>
        <content type="html"><![CDATA[<p>代码有长有短，<br>
如 windows 源码，<br>
长到这辈子可能都看不完。<br>
如 print(“hello world”)，<br>
短到一行也可以运行。<br>
或长或短，<br>
总归是写出来有用的，<br>
那代码到底都干了啥呢？</p>
<p>经某人总结，<br>
代码干了一件事：<br>
“找出东西来用”。<br>
这挺好理解，<br>
上街得坐车。<br>
做饭得用锅，<br>
但是，它并不简单。</p>
<p>做饭得放米，<br>
米在米缸里，<br>
放米得看几张口，<br>
先量再洗，<br>
洗完按比例加水，<br>
加少了磕牙，加多了会糊，<br>
最后记得插电按开始。</p>
<p>这一切都可以是数据，<br>
米是1，缸是2，锅是3，水是4，<br>
放米a，洗米b，加水c，插电d，按钮e，<br>
其实呢，一切变化都是数据变化，<br>
电流要跑多少回，水要蒸腾几朵云，<br>
才能把生米给做成了熟饭。</p>
<p>因此，“找出东西来用” ——<br>
编码数据，<br>
取出数据，<br>
计算数据，<br>
写入数据。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[工作太久带来的问题]]></title>
        <id>http://zhongxingdou.github.io/blog/post/working-too-long/</id>
        <link href="http://zhongxingdou.github.io/blog/post/working-too-long/">
        </link>
        <updated>2020-04-11T10:45:59.000Z</updated>
        <summary type="html"><![CDATA[<p>毕业已经是19年前的事了<br>
做程序也已经有13年了<br>
不知不觉人生已经走过了三分之一（可能还要多😭）<br>
心里还不觉得，可人家已经叫你叔了</p>
]]></summary>
        <content type="html"><![CDATA[<p>毕业已经是19年前的事了<br>
做程序也已经有13年了<br>
不知不觉人生已经走过了三分之一（可能还要多😭）<br>
心里还不觉得，可人家已经叫你叔了</p>
<!-- more -->
<p>青春不见了<br>
曾经爱过的姑娘不见了<br>
老家的土房子也不见了<br>
普希金说过：过去的东西总是显得珍贵</p>
<p>18岁时在大街上找工作时的迷茫感觉<br>
似乎还没有完全散干净<br>
浑浑噩噩的过了这么些年<br>
人生的航灯，它似乎也没有更明朗一些</p>
<p>这些年哪，似乎只有工作<br>
我就像那上了发条的钟<br>
按部就班，嘀嗒嘀嗒<br>
毫无生趣，毫无人性</p>
<p>如果有一天，老板它不上钟<br>
可能我就要停了<br>
那个时候，我还能不能正常的<br>
吃喝拉撒，呼吸空气</p>
<p>天哪，太可怕了<br>
我卖了我的自由<br>
换来了如此的人生<br>
如此的人生</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[火龙果H5开发平台开发日志]]></title>
        <id>http://zhongxingdou.github.io/blog/post/huolongguo-h5-dev-log/</id>
        <link href="http://zhongxingdou.github.io/blog/post/huolongguo-h5-dev-log/">
        </link>
        <updated>2020-04-11T10:28:23.000Z</updated>
        <content type="html"><![CDATA[<h2 id="2022-2-21-~-2020-2-25">2022-2-21 ~ 2020-2-25</h2>
<ol>
<li>得势：添加证书 task.techsea.com.cn</li>
<li>得势：充值100并使用云函数备份数据库</li>
<li>数据安全：使用云函数备份数据库，不同数据库使用不同的账号密码</li>
<li>活动小程序：对接口，使用“干净架构”重构</li>
<li>编辑器重构：布局与预览从 shadow dom -&gt; iframe</li>
</ol>
<h2 id="2022-2-14-~-2020-2-18">2022-2-14 ~ 2020-2-18</h2>
<ol>
<li>业务：江合磁业，微官网+PC官网，介绍乐搭云</li>
<li>业务：桥头老乡，吉泰财税-宁总、力源自动化、渔舟红-王总、弘川塑胶五金-康总</li>
<li>活动小程序：开发界面（吕qj）+ 接口（张zh）</li>
<li>编辑器重构：布局与预览从 shadow dom -&gt; iframe</li>
</ol>
<h2 id="2022-2-1-~-2020-2-11">2022-2-1 ~ 2020-2-11</h2>
<ol>
<li>组件配置：验证 van-divider、van-empty、van-navbar</li>
<li>重构编辑器主文件 index.vue：分离出子组件，减少代码行数</li>
<li>编辑器重构：布局与预览从 shadow dom -&gt; iframe</li>
</ol>
<h2 id="2022-1-24-~-2020-1-28">2022-1-24 ~ 2020-1-28</h2>
<ol>
<li>开发产品手册小程序：小程序、后台、接口</li>
<li>组件配置：验证 van-loading、van-card、van-tag、van-actionSheet、van-action、van-area、van-pull-refresh</li>
</ol>
<h2 id="2022-1-17-~-2020-1-21">2022-1-17 ~ 2020-1-21</h2>
<ol>
<li>开发产品手册小程序：小程序、后台、接口</li>
<li>上线产品手册小程序：骏马香料手册</li>
</ol>
<h2 id="2022-1-10-~-2020-1-14">2022-1-10 ~ 2020-1-14</h2>
<ol>
<li>开发产品手册小程序：小程序、后台、接口</li>
</ol>
<h2 id="2022-1-1-~-2020-1-7">2022-1-1 ~ 2020-1-7</h2>
<ol>
<li>开发产品手册小程序：小程序、后台、接口</li>
<li>部署小程序第三方平台管理工具</li>
<li>支持微信登录</li>
<li>支持 HTML 作为组件库（方便筛选）</li>
</ol>
<h2 id="2021-12-27-~-2020-12-31">2021-12-27 ~ 2020-12-31</h2>
<ol>
<li>融资：武大创新投推荐联系亿方集团兆方投资-余</li>
<li>融资：鲸准上主动联系-亦联、线性、丰元、源码，邮件：深创投、启亿资本</li>
<li>构建：支持 transition、注册与实例化作为功能组件的 Vue 组件</li>
<li>支持 transition-group</li>
<li>编辑器：重构动画设置面板、添加 transition 设置面板</li>
<li>发布时生成页面预览图</li>
</ol>
<h2 id="2021-12-20-~-2020-12-24">2021-12-20 ~ 2020-12-24</h2>
<ol>
<li>支持设置组件属性为 null，为 null 时不传递给组件</li>
<li>rui：支持日期格式</li>
<li>rui：重构 oneOf 实现</li>
<li>教程：基于抽奖示例的数据接口与功能组件使用教程（沈sk）</li>
</ol>
<h2 id="2021-12-13-~-2020-12-17">2021-12-13 ~ 2020-12-17</h2>
<ol>
<li>构建：优化计算绑定值</li>
<li>按功能分割在 main 中引入的全局 CSS</li>
<li>注册：优化验证</li>
<li>编辑器：实现 transiton 配置并自动包裹它配置的组件</li>
</ol>
<h2 id="2021-12-6-~-2020-12-10">2021-12-6 ~ 2020-12-10</h2>
<ol>
<li>客户：加入微信群&quot;创业者联盟-Viper&quot;唯品会前员工创业者群</li>
<li>客户：新增意向客户，唯品会前员工公司-为伊科技（白云区，成立于2015年，企业数字化SaaS服务商）</li>
<li>客户：加入微信群“奇绩创坛广州线下交流群”</li>
<li>客户：新增意向客户，奇绩创坛群友-千秋软件（成立10年，天河区，• 一体化物联网解决方案提供商 • 企业数字化转型专业服务商），约下周见</li>
<li>参加奇迹创坛广州会议，听陆奇分享</li>
<li>优化 patterProperties 的 key 输入，修复前后台 bug</li>
<li>编写文档：表单双向绑定</li>
<li>融资：在鲸准 App 上传融资资料，第一天有5个投资人要了BP</li>
<li>融资：投奇绩创坛（已被投企业获客多推荐，前BIGO同事），按对方要求回答问题，等面试</li>
<li>融资：通过投资人的官方邮箱投了凯泰资本、线性资本、创新工场、源码资本</li>
</ol>
<h2 id="2021-11-29-~-2020-12-3">2021-11-29 ~ 2020-12-3</h2>
<ol>
<li>rui 支持 patternProperties</li>
<li>优化编辑器 darkMode</li>
<li>组件大纲树支持 slot，折叠状态在组件增删除后可以保持</li>
<li>安全退出：不使用 vue 路由跳转至登录，使用 location.href 实现页面刷新清空内存</li>
<li>编辑器：支持配置栏宽度调节</li>
</ol>
<h2 id="2021-11-22-~-2020-11-26">2021-11-22 ~ 2020-11-26</h2>
<ol>
<li>实现组件、库、专题、模板、插件转移或分享给团队</li>
<li>团队：邀请加入、系统邀请消息、加入团队、团队与个人账户切换</li>
<li>团队与个人账户权限</li>
<li>支持配置需要返回值的委托属性</li>
<li>构建：使用 promise next handler 代替 async await</li>
<li>办理员工离职手续</li>
</ol>
<h2 id="2021-11-14-~-2020-11-19">2021-11-14 ~ 2020-11-19</h2>
<ol>
<li>业务：为出口易 shopify 项目画原型在墨刀上</li>
<li>业务：与新客云达成为其进行小程序与后台开发</li>
<li>和老乡（怀）谈外包项目（美容美发咨询公司的业务系统）</li>
<li>与得势一起拜访深圳坂田的东南亚电商公司（东南亚知识局等）</li>
</ol>
<h2 id="2021-11-08-~-2020-11-12">2021-11-08 ~ 2020-11-12</h2>
<ol>
<li>开发 shopify 商品列表、后台订单列表示例</li>
<li>拜访出口易番禺公司</li>
<li>第一次交公积金成功</li>
<li>rui：default 值支持箭头表达式、object 与 array 的 default 值会被自动 clone</li>
<li>实现新设计的：登录、注册、用户后台、首页</li>
</ol>
<h2 id="2021-11-01-~-2020-11-05">2021-11-01 ~ 2020-11-05</h2>
<ol>
<li>公积金办理开户</li>
<li>用户后台：不允许有黑暗主题</li>
<li>编辑器：在本地缓存中记住黑暗主题设置</li>
<li>专题的名字允许重复</li>
<li>设计登录、注册、用户后台界面（晓东-品牌设计）</li>
<li>支持组件委托属性（function类型），schema 声明为 type: array, format: delegate</li>
<li>增加页面地址二维码：发布对话框、专题后台</li>
</ol>
<h2 id="2021-10-25-~-2020-10-29">2021-10-25 ~ 2020-10-29</h2>
<ol>
<li>拆分出管理员后台项目：hlg-admin-service，hlg-admin-web，域名 admin.ledayun.cn</li>
<li>shopify jsbuy API 测试，可以获取商品，建立结算并设置自定义参数，结算对象的 url 可在 shopify 打开结算页面，添加 shopify checkout 支付后的扩展</li>
<li>申请公积金企业 key（胡 lf 协助）</li>
<li>业务拓展（杨zhong）</li>
<li>美化界面<br>
<img src="http://zhongxingdou.github.io/blog//post-images/1635608190684.png" alt="" loading="lazy"><br>
<img src="http://zhongxingdou.github.io/blog//post-images/1635608199523.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2021-10-18-~-2020-10-22">2021-10-18 ~ 2020-10-22</h2>
<ol>
<li>与出口易谈合作，网红分享裂变，Shopify API</li>
<li>向YangZhong、Arber、立哥推荐产品</li>
<li>与1024前端谈兼职</li>
<li>支持 v-if 和 v-show</li>
<li>登陆后直接跳至后台专题列表</li>
<li>新增16个vant库组件</li>
</ol>
<h2 id="2021-10-11-~-2020-10-15">2021-10-11 ~ 2020-10-15</h2>
<ol>
<li>面试录用前端一名（wangning)，签合同一年</li>
<li>编写组件配置元 schema 方便检查组件配置是否正确（VSCode 原生支持，json 文件添加 $schema 节点实现）</li>
<li>外包郭han推荐的“晓东-品牌设计”设计商业计划书</li>
<li>发布：第一次发布时可自定义发布文件名</li>
<li>修复添加含有文字内容的快照失败</li>
<li>兼职韦junwei提供唯ph常用组件列表</li>
<li>兼职许zh、李yh，24R机器人协助修改 BP</li>
<li>业务：与陈LiQiong商谈福特汽车活动业务，已报价（流量费3000）</li>
<li>业务：与黄xiaoxuan&amp;乔帮主团队了解业务，他们的活动类型比较少，后期有合作可能</li>
<li>业务：李北京李 yuliang 联系，暂无进展</li>
<li>业务：联系东方会，他们提供投资与业务介绍服务，投资1000万5个点</li>
</ol>
<h2 id="2021-10-1-~-2020-10-8">2021-10-1 ~ 2020-10-8</h2>
<ol>
<li>召集前端搭建开发者开会宣传</li>
<li>支持配置的 value  为 function 类型 的 diretive（schema 声明为 {type: array, format: event}）</li>
<li>修改商业计划书</li>
</ol>
<h2 id="2021-9-27-~-2020-9-30">2021-9-27 ~ 2020-9-30</h2>
<ol>
<li>支持配置的 value  为 function 类型 的 diretive（schema 声明为 {type: array, format: event}）</li>
</ol>
<h2 id="2021-9-20-~-2020-9-24">2021-9-20 ~ 2020-9-24</h2>
<ol>
<li>背景支持多个背景（图片+中心渐变+方向渐变）</li>
</ol>
<h2 id="2021-9-13-~-2020-9-18">2021-9-13 ~ 2020-9-18</h2>
<ol>
<li>实现 CSS 库可扩展，动画库不再内置</li>
<li>支持上传 .zip 文件至腾讯 COS，便于 css 文件中引用图片、字体等资源</li>
<li>支持组件声明子类型，子类型的配置覆盖基础配置，子类型拥有独立 icon，将展示在组件列表</li>
<li>兼职李zw添加第一个组件，并写相关过程文章（由本人重写后发布在公众号）</li>
<li>得势云帮韦junwei收尾</li>
</ol>
<h2 id="2021-9-6-~-2020-9-10">2021-9-6 ~ 2020-9-10</h2>
<ol>
<li>SEO 添加 image 字段（可用于微信分享）</li>
<li>文件上传支持输入文件 URL</li>
<li>得势移动官网（袁qj）</li>
</ol>
<h2 id="2021-8-30-~-2020-9-3">2021-8-30 ~ 2020-9-3</h2>
<ol>
<li>拓展兼职做众为成微官网（QJ）</li>
<li>页面增加发布状态相关字段</li>
<li>申请腾讯地图开发者账号（微信登录）</li>
<li>拓展兼职（李zw，邱hb）</li>
<li>填写拉勾企业账号相关（准备招聘实习生）</li>
<li>添加获取微信签名接口</li>
<li>添加腾讯地图组件</li>
</ol>
<h2 id="2021-8-23-~-2020-8-27">2021-8-23 ~ 2020-8-27</h2>
<ol>
<li>备案 compage.net ledayun.cn</li>
<li>申请微信商家号、开放平台账号、小程序账号。</li>
<li>官网添加联系方式</li>
<li>axios 不使用全局默认对象</li>
<li>修复功能组件初始化参数绑定失败</li>
<li>拜访朋友（24R机器人，雷哥）</li>
<li>乐搭云官网移动版（张liang）</li>
</ol>
<h2 id="2021-8-16-~-2020-8-20">2021-8-16 ~ 2020-8-20</h2>
<ol>
<li>实现UI组件及功能组件快照</li>
<li>拓展客户做微官网（众为成：黄QR）</li>
<li>拓展兼职（良），已开始任务</li>
</ol>
<h2 id="2021-8-9-~-2020-8-13">2021-8-9 ~ 2020-8-13</h2>
<ol>
<li>页面组件及功能组件添加 refId 属性，用于引用，方便页面复制</li>
<li>实现专题模板</li>
<li>实现专题复制</li>
</ol>
<h2 id="2021-8-2-~-2020-8-6">2021-8-2 ~ 2020-8-6</h2>
<ol>
<li>构建：实现发布结果页面到 CDN</li>
<li>构建：支持双向绑定：</li>
<li>构建：事件绑定支持事件多参数</li>
<li>支持 Vue directive 作为功能组件</li>
<li>权限：不能修改他人的插件、组件分类、功能、功能分类、组件库等</li>
<li>实现上传文件并支持指定文件前缀（如果全是nano-id则不可识别）</li>
</ol>
<h2 id="2021-7-26-~-2020-7-30">2021-7-26 ~ 2020-7-30</h2>
<ol>
<li>购买域名 ledayun.com 7000元</li>
<li>支持声明和绑定多个事件参数</li>
<li>解析域名 ledayun.com.cn 至官网，并开启 CDN 以及配置证书</li>
<li>解析域名 h5.ledayun.com.cn 至拼搭平台</li>
<li>配置静态资源测试及生产 COS 服务及  CDN 域名</li>
<li>使用腾讯 COS SDK 上传图片（开发与生产使用不同子账号）</li>
</ol>
<h2 id="2021-7-19-~-2020-7-23">2021-7-19 ~ 2020-7-23</h2>
<ol>
<li>周二到农行开立公司账户（毛经理）</li>
<li>联系 BIGO 前同事（袁qj）开发官网移动版适配</li>
<li>协调 许zf 开发“微任务威客平台”</li>
<li>后台实现操作日志功能</li>
<li>开发构建</li>
</ol>
<h2 id="2021-7-12-~-2020-7-16">2021-7-12 ~ 2020-7-16</h2>
<ol>
<li>开发官网（设计：赖hy、开发：韦jw）<img src="http://zhongxingdou.github.io/blog//post-images/1626952215719.png" alt="" loading="lazy"></li>
<li>兼职开发人员唯品会“盛夏爽购节”页面（Your bug）</li>
<li>兼职开发人员配置新组件 VantStick、VantSearch、sk-anchor、VantNoticeBar、VantStepper（Your bug）</li>
<li>配置新组件 VantSidebar</li>
<li>开发构建</li>
<li>14日拿到营业执照。支付记账费、公司注册费</li>
<li>备案 ledayun.com.cn</li>
<li>阿里云上发布需求购买域名 ledayun.com</li>
<li>阿里云上发布需求购买商标 “乐搭”</li>
<li>在腾讯云购买服务器、数据库，部署“火龙果H5搭建平台”到腾讯云，保留阿里云上版本</li>
<li>产品设计“微任务威客平台”<br>
10.使用 animate.css 实现基本的动画样式配置</li>
</ol>
<h2 id="2021-7-5-~-2020-7-9">2021-7-5 ~ 2020-7-9</h2>
<ol>
<li>报名唯品会内部创新项目（建成代报名）</li>
<li>为编辑器左侧组件列表实现瀑布流样式</li>
<li>优化黑暗模式</li>
<li>功能组件支持 page hooks</li>
<li>移除所有内置功能组件（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>a</mi><mi>g</mi><mi>e</mi><mi mathvariant="normal">、</mi></mrow><annotation encoding="application/x-tex">page、</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord cjk_fallback">、</span></span></span></span>service-api、$special-data-store），重新实现为外部组件</li>
</ol>
<h2 id="2021-6-1-~-2020-6-30因新冠疫情原因在家526-624">2021-6-1 ~ 2020-6-30（因新冠疫情原因，在家，5.26-6.24）</h2>
<ol>
<li>开发构建</li>
<li>数据绑定支持绑定数组</li>
<li>功能组件 page 增加跳转和刷新功能</li>
<li>页面设置：支持全局 box-sizing 设置</li>
<li>rui：支持显示 schema.description</li>
<li>实现接口编辑器 ApiEditor 用于编辑接口组件 service-api 的配置</li>
<li>rui：支持配置数据项 bindingOnly 表示只能绑定值，不能设置值</li>
<li>为了 special-data-store 功能组件引用外部的 store 和 service-api，实现属性绑定到整个目标（即绑定到根）</li>
<li>功能组件实例化时按照依赖关系排序后实例化</li>
<li>绑定目标的 id 调整为 targetType_id，因为构建时生成的变量名不能数字开头</li>
</ol>
<h2 id="2021-5-24-~-2021-5-28">2021-5-24 ~ 2021-5-28</h2>
<ol>
<li>值绑定支持绑定功能组件的公开属性（member，非用于初始化的 props）</li>
<li>事件设置中的<strong>设置系列方法</strong>支持设置属性的指定后代成员，即通过 path 指定，而不是 name</li>
<li>界面支持<strong>黑暗模式</strong>主题，并可以通过按钮切换主题</li>
<li>支持组件配置中设置属性为 <strong>readonly</strong>，即此属性是否为只能读取，不能设置</li>
<li>实现<strong>双向绑定</strong>，但仅针对输入类型的 UI 组件绑定到功能组件的属性</li>
<li>添加 HTML 组件 video</li>
<li>实现在预览时将样式的 px 单位自动<strong>转换成 rem</strong><img src="http://zhongxingdou.github.io/blog//post-images/1622212246288.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2021-5-15-~-2021-5-21">2021-5-15 ~ 2021-5-21</h2>
<ol>
<li>支持在组件配置 schema 中通过 $ref 引用远程 schema</li>
<li>实现用于渲染包含异步节点的 <strong>refSchemaRender</strong></li>
<li>实现支持异步加载选项的下拉选择组件 RemoteSelect</li>
<li>实现功能组件：服务接口 <strong>service-api</strong></li>
<li>实现<strong>页面复制</strong></li>
<li>设置样式确保根组件是 BFC，这样子组件的 margin 不会影响到根组件</li>
<li>实现功能组件：<strong>special-data-store</strong> 即数据仓库对应的功能组件</li>
</ol>
<h2 id="2021-5-7-~-2021-5-14">2021-5-7 ~ 2021-5-14</h2>
<ol>
<li>支持在组件配置的事件绑定配置中声明用 $self 代表组件自身</li>
<li>添加组件 van-checkbox</li>
<li>支持在组件配置 defaultMode.data 的子项的值声明为表达式，其优先级高于 configSchema 中项的默认值</li>
<li>值绑定支持绑定到自身（去除值绑定时排除当前组件）</li>
<li>在值绑定对话框的应用函数计算中显示绑定对象的类型</li>
<li>实现页面组件</li>
<li>编辑器： 编辑内部样式支持删除选择器（样式应用范围）</li>
</ol>
<h2 id="2021-5-1-~-2021-5-6">2021-5-1 ~ 2021-5-6</h2>
<ol>
<li>实现配置<strong>组件样式变量</strong></li>
<li>添加 van-collapse 组件</li>
<li>功能设计：接口-数据仓库-请求 如何作为功能组件相互配合</li>
</ol>
<h2 id="2021-4-24-~-2021-4-29">2021-4-24 ~ 2021-4-29</h2>
<ol>
<li>修复组件样式除第一次外均加载失败</li>
<li>事件绑定支持 promise、waitResult 特性</li>
<li>rui：添加 mapper 渲染作为 map 的 object 的输入控件</li>
<li>数据仓库界面优化：编辑数据时隐藏结构树导航</li>
<li>数据仓库 bug fixes：选择格式后报错以及未正确渲染相应控件</li>
</ol>
<h2 id="2021-4-19-~-2021-4-23">2021-4-19 ~ 2021-4-23</h2>
<ol>
<li>支持绑定 string 作为迭代数据</li>
<li>重构 editorType</li>
<li>页面只读：阻止更新如果页面不允许编辑</li>
<li>允许注册：如果按住 shift 点击注册按钮</li>
<li>debounce 页面更新操作</li>
<li>功能组件：实现服务、admin、菜单、路由、配置面板、编辑器相关导航、事件绑定</li>
<li>添加功能组件 axios</li>
<li>编辑器：优化选中组件工具栏和组件名称浮条定位</li>
<li>支持 domProps 配置、绑定</li>
</ol>
<h2 id="2021-4-12-~-2021-4-16">2021-4-12 ~ 2021-4-16</h2>
<ol>
<li>页面支持<strong>只读模式</strong>（无权限的人只能预览不能编辑）</li>
<li>支持<strong>外部预览</strong>（编辑器外），支持手机扫描二维码预览</li>
<li>优化登陆：登陆后跳转回原页面（会话过期引起的登陆）</li>
<li>编辑器：优化组件浮动工具条和组件名称浮条定位</li>
<li>编辑器：优化 slot 占符组件的渲染，仅在 slot 没有子组件时渲染</li>
<li>编辑器：按 shift 键时，添加组件到容器组件的内部</li>
<li>组件：添加<strong>通用配置</strong> data-anchor，hidden，click event</li>
<li>样式配置插件优化：重构 input-number-with-unit，image-upload 可输入地址，重构 el-spacing-inpu</li>
<li>开始开发<strong>功能组件</strong></li>
</ol>
<h2 id="2021-4-5-~-2021-4-9">2021-4-5 ~ 2021-4-9</h2>
<ol>
<li>文档：登陆、数据仓库、数据绑定</li>
<li>辅助开发第3个页面：度小满金融-投票抽奖（DFY）</li>
<li>admin：接口</li>
<li>编辑器：数据仓库-为 数据属性 增加校验，修复 bug</li>
<li>编辑模式上下文添加变量 $targetTextChildren</li>
<li>增加 vant 组件（HQP）</li>
</ol>
<h2 id="2021-3-29-~-2021-4-2">2021-3-29 ~ 2021-4-2</h2>
<ol>
<li><strong>支持多层次 v-for 绑定</strong></li>
<li>支持 <strong>scoped slot</strong>（传递局部变量的 slot）数据绑定与渲染（data.scopedSlots）</li>
<li>调整组件层次（导航树或拖拽）时根据 validChildNames，validParentNames 校验合法性</li>
<li>添加 van-switch、van-pagination 组件</li>
<li>开始开发<strong>功能组件</strong></li>
</ol>
<h2 id="2021-3-21-~-2021-3-26">2021-3-21 ~ 2021-3-26</h2>
<ol>
<li>3月21日在家里为兼职前端做组件配置与拼搭页面培训（c景松，hq萍，hj明)</li>
<li>实现在同一个页面上加载相同<strong>组件的不同版本</strong></li>
<li>组件标识使用 versionId（相同组件有不同版本），注册时使用 tag + versionId</li>
<li>rui: UIMapper 支持声明 type 来表明自己的作用，apply 时 type 相同的 UIMapper 只会取一个</li>
<li>支持 valueOptions 来声明数据的可选值，并配置 UIMapper 生成 select</li>
<li>admin：组件表单添加校验</li>
<li><strong>实现内容（children）绑定</strong></li>
<li>组件导航树从配置区移入资源区（避免调整父子样式时经常切换导航面板与样式面板）</li>
</ol>
<h2 id="2021-3-15-~-2021-3-1">2021-3-15 ~ 2021-3-1</h2>
<ol>
<li>在 DropInBox 中显示 slot 名称与组件名称</li>
<li>rui：添加图片上传 UIMapper，schema.format: 'image'</li>
<li>支持在组件<strong>导航树中移动组件</strong></li>
<li>支持<strong>组件复制</strong></li>
<li>预览时隐藏资源与配置栏，支持 Esc 鍵切换，优化预览样式</li>
<li>支持<strong>命名 slots 渲染</strong></li>
<li>优化样式配置</li>
<li>重构组件配置</li>
<li>编写组件文档 https://www.yuque.com/liuxing-vhg7a/qpdirk<br>
<img src="http://zhongxingdou.github.io/blog//post-images/1616500770020.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2021-3-8-~-2021-3-14">2021-3-8 ~ 2021-3-14</h2>
<ol>
<li>admin: 优化组件表单的增加版本操作</li>
<li>优化编辑器布局与预览区域的样式</li>
<li><strong>数据绑定支持表达式</strong></li>
</ol>
<h2 id="2021-3-1-~-2021-3-5">2021-3-1 ~ 2021-3-5</h2>
<ol>
<li>css 设置面板：display、flex-item</li>
<li>StyleConfigPanel: stop to use computed style</li>
<li>process.env -&gt; import.meta.env</li>
<li>upgrade vite</li>
</ol>
<h2 id="2021-2-22-~-2021-2-26">2021-2-22 ~ 2021-2-26</h2>
<ol>
<li>css 设置面板：background</li>
<li>23-25 4天在广西南宁</li>
</ol>
<h2 id="2021-2-15-~-2021-2-20">2021-2-15 ~ 2021-2-20</h2>
<ol>
<li>css 设置面板：margin、padding、position、border</li>
</ol>
<h2 id="2021-2-8-~-2021-2-13">2021-2-8 ~ 2021-2-13</h2>
<ol>
<li>通用UI组件：input-number-with-unit、el-webfont-select、el-radio-group2</li>
<li>css 设置面板：文字排版、size</li>
<li>引入 storybook 方便开发组件 demo、文档</li>
</ol>
<h2 id="2021-2-1-~-2021-2-5">2021-2-1 ~ 2021-2-5</h2>
<ol>
<li>引入 vitejs 构建服务</li>
<li>因 vitejs 不支持 pug 模板，将 pug 模板转成 HTML</li>
<li>引入 prettier 并格式化代码</li>
<li>因 vitejs 使用的 rollup 不支持 require.context，取消动态路由加载，改为手动引入。https://github.com/elcarim5efil/rollup-plugin-require-context 插件可支持</li>
<li>引入 tailwind</li>
</ol>
<h2 id="2021-1-25-~-2021-1-29">2021-1-25 ~ 2021-1-29</h2>
<ol>
<li>实现 siteStore 及其 state 与 schema 编辑</li>
<li>实现 special 专题及其页面管理，当前编辑页面切换</li>
</ol>
<h2 id="2021-1-18-~-2021-1-22">2021-1-18 ~ 2021-1-22</h2>
<ol>
<li>实现变量组件用于模拟简单数组和对象数组： array-controller，配置插件 value-schema-editor。</li>
</ol>
<h2 id="2021-1-11-~-2021-1-13">2021-1-11 ~ 2021-1-13</h2>
<ol>
<li>实现组件的 iterator 绑定</li>
<li>实现组件的 attribute, props 数据绑定，并可绑定到组件或上级组件的 iterator 数据</li>
</ol>
<h2 id="2021-1-2-~-2021-1-8">2021-1-2 ~ 2021-1-8</h2>
<ol>
<li>重构 store 的 editor 模块，分成三个子模块（editor, editingPage, editingCompTree），避免代码过长</li>
<li>配置弹出层组件 vant popup，增加配置项 layoutMode.forceData，优先级高于用户配置</li>
<li>实现特性：选择组件后，如组件不可见，自动滚动到可见</li>
<li>实现特性：选择不可见组件后（如从组件树中选择 select 的 option），将<strong>浮动操作工具条</strong>显示到<strong>父组件</strong>位置</li>
</ol>
<h2 id="2020-12-28-~-2020-12-31">2020-12-28 ~ 2020-12-31</h2>
<ol>
<li>重构组件布局渲染 ComponentRender</li>
<li>编辑器：实现 popup 类型的编辑插件<br>
<img src="http://zhongxingdou.github.io/blog//post-images/1609238708122.png" alt="" loading="lazy"></li>
<li>实现配置限制子组件类型的组件</li>
<li>编辑器：实现导航树<img src="http://zhongxingdou.github.io/blog//post-images/1609466732633.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-12-21-~-2020-12-25">2020-12-21 ~ 2020-12-25</h2>
<ol>
<li>编辑器：实现 hover 组件时在上方显示组件名<img src="http://zhongxingdou.github.io/blog//post-images/1609238718393.png" alt="" loading="lazy"></li>
<li>编辑器：实现组件浮动操作工具条<img src="http://zhongxingdou.github.io/blog//post-images/1609238646800.png" alt="" loading="lazy"></li>
<li>编辑器：编辑插件分类为 inplace 插件，重新设计 editMode 配置</li>
<li>调整 logo 样式与导航链接<br>
<img src="http://zhongxingdou.github.io/blog//post-images/1609238631306.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-12-14-~-2020-12-18">2020-12-14 ~ 2020-12-18</h2>
<ol>
<li>退出编辑时重设页面相关 state</li>
<li>修复自定义 ORM 模型字段时共用默认值</li>
<li>实现组件库样式变量配置</li>
</ol>
<h2 id="2020-12-07-~-2020-12-12">2020-12-07 ~ 2020-12-12</h2>
<ol>
<li>插件增加 “isGeneral” 字段表是否通用字段</li>
<li>编辑器使用 grid 布局</li>
<li>实现组件库用于加载与设置相同库的组件</li>
<li>实现页面配置：SEO、颜色、展示 ID 与名称</li>
<li>部署到阿里云（邓景瑞的服务器）</li>
<li>重构登陆：使用 passport 代替 jsonwebtoken，支持第三方 github 登陆</li>
</ol>
<h2 id="2020-11-30-~-2020-12-04">2020-11-30 ~ 2020-12-04</h2>
<ol>
<li>删除组件同步到后台，删除前确认</li>
<li>页面列表：添加编辑布局链接</li>
<li>修复编辑组件子节点时编辑组件clone在滚动时定位不准问题</li>
<li>加载页面组件后恢复布局模式时的组件自定义样式</li>
<li>调整编辑器布局列的布局样式（中间手机位置）</li>
<li>调整编辑器布局当前选中组件样式（从outline到模拟四边框）</li>
<li>编辑器编辑子节点mask和clone的定位实现</li>
<li>修复恢复组件自定义样式不成功（应该在页面组件完全恢复到store后再恢复）</li>
</ol>
<h2 id="2020-11-23-~-2020-11-27">2020-11-23 ~ 2020-11-27</h2>
<ol>
<li>实现保存添加的组件、自动保存根组件</li>
<li>实现加载页面组件并恢复 state 和布局编辑</li>
<li>实现修改当前选中组件后自动保存</li>
</ol>
<h2 id="2020-11-16-~-2020-11-20">2020-11-16 ~ 2020-11-20</h2>
<ol>
<li>优化编辑器组件筛选</li>
<li>将 huolongguo 项目拆分为 hlg-client 和 hlg-service</li>
<li>实现编辑插件管理后台</li>
<li>实现动态加载编辑插件</li>
<li>修复编辑组件刚进入编辑状态又立即退出编辑（未clone data.on导致退出编辑事件处理器始终存在）</li>
<li>未进入预览时不渲染预览组件，但继续向预览 shadowDOM 添加样式</li>
<li>重构编辑模式（配置与实现）</li>
</ol>
<h2 id="2020-11-9-~-2020-11-13">2020-11-9 ~ 2020-11-13</h2>
<ol>
<li>为得势编写企业微信机器人</li>
<li>修复组件编辑内部样式相关问题</li>
</ol>
<h2 id="2020-11-1-~-2020-11-4">2020-11-1 ~ 2020-11-4</h2>
<ol>
<li>动态加载 Vue 组件 css</li>
<li>在后台重新配置测试组件并通保存到数据库</li>
<li>重构组件编辑模式实现</li>
<li>调整组件配置部分结构</li>
<li>动态加载 Vue 组件 css 中的字体</li>
</ol>
<h2 id="2020-10-25-~-2020-10-30">2020-10-25 ~ 2020-10-30</h2>
<ol>
<li>编辑器实现预览模式</li>
<li>全面更新编辑器外观<img src="http://zhongxingdou.github.io/blog//post-images/1603976311375.png" alt="" loading="lazy"></li>
<li>从数据库加载组件分类与组件</li>
<li>动态加载 Vue 组件 js 并注册组件</li>
</ol>
<h2 id="2020-10-9-~-2010-10-22">2020-10-9 ~ 2010-10-22</h2>
<ol>
<li>开发事件绑定UI组件：支持绑定数据，支持设置属性<br>
<img src="http://zhongxingdou.github.io/blog//post-images/1603194116435.png" alt="" loading="lazy"><br>
<img src="http://zhongxingdou.github.io/blog//post-images/1603194181353.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-10-1-~-2020-10-8">2020-10-1 ~ 2020-10-8</h2>
<p>国庆与中秋假期</p>
<h2 id="2020-9-21-~-2020-9-30">2020-9-21 ~ 2020-9-30</h2>
<ol>
<li>开发 techsea-cloud-web</li>
</ol>
<h2 id="2020-9-14-~-2020-9-19">2020-9-14 ~ 2020-9-19</h2>
<ol>
<li>部署 techsea-cloud-api techsea-cloud-admin 到腾讯云服务器</li>
<li>开发事件绑定UI组件</li>
</ol>
<h2 id="2020-9-11">2020-9-11</h2>
<ol>
<li>制作介绍商业模式的PPT</li>
</ol>
<h2 id="2020-9-5-~-2020-9-10">2020-9-5 ~ 2020-9-10</h2>
<ol>
<li>实现编辑组件内部元素的样式<img src="http://zhongxingdou.github.io/blog//post-images/1599481921754.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-9-1-~-2020-9-4">2020-9-1 ~ 2020-9-4</h2>
<ol>
<li>学习JavaScript 验证库 Joi https://joi.dev/  并在 Hapi 项目中 使用</li>
<li>重构 techsea-cloud-api router, plugin, settings</li>
<li>开始实现组件微调（子元素属性样式编辑）：clone 编辑中的组件放入指定容器中，并将其位置与原组件重叠</li>
</ol>
<h2 id="2020-8-31">2020-8-31</h2>
<ol>
<li>修复 【装配编辑器】wrap 组件捕获模式无法阻止链接组件点击，改为按 Shift 鍵响应组件原有行为（原是 Alt 鍵，但它浏览器点链接默认行为是下载，Shift 则是新窗口打开）</li>
</ol>
<h2 id="2020-8-18-~-2020-8-30">2020-8-18 ~ 2020-8-30</h2>
<ol>
<li>学习 Prisma2 的使用，包括 Studio Migration 及 generate</li>
<li>学习 Hapi 的使用</li>
<li>学习 ElementAdmin 的使用</li>
<li>使用上述技术开发得势网站项目  techsea-cloud-admin 与 techsea-cloud-api</li>
</ol>
<h2 id="2020-8-17">2020-8-17</h2>
<ol>
<li>实现主题色功能<img src="http://zhongxingdou.github.io/blog//post-images/1597666045350.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-8-12~2020-8-13">2020-8-12~2020-8-13</h2>
<ol>
<li>H5制作平台-拼搭（项目介绍文档，技术为主，在系统的备忘录中）</li>
<li>H5制作平台-拼搭 https://www.processon.com/view/link/5f34d9a6f346fb60b6c9c11a（脑图，平台服务为主）</li>
</ol>
<h2 id="2020-8-10-~-2020-8-14">2020-8-10 ~ 2020-8-14</h2>
<ol>
<li>实现组件 props 配置与 attrs 配置</li>
<li>实现组件样式配置插件化（初版）</li>
<li>修复 RUI bug</li>
</ol>
<h2 id="2020-7-27-~-2020-8-6">2020-7-27 ~ 2020-8-6</h2>
<ol>
<li>RUI 第一版开发完成（计15天）</li>
</ol>
<h2 id="2020-7-20-~-2020-7-24">2020-7-20 ~ 2020-7-24</h2>
<ol>
<li>了解并使用 aws 服务，安装 AWS CLI，EB CLI，了解 AWS IAM
<ul>
<li>弹性容器-Elastic Beanstalk</li>
<li>非关系型数据库-dynamoDB</li>
<li>Serverless - Lambda</li>
<li>安全服务 - IAM（用户-组-角色-权限策略）</li>
</ul>
</li>
<li>帮得势开发抽奖程序<br>
<img src="http://zhongxingdou.github.io/blog//post-images/1595410438717.png" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-7-7-~-2020-7-17">2020-7-7 ~ 2020-7-17</h2>
<ol>
<li>开发 RUI —— 根据 JSONSchema 来生成界面的库</li>
</ol>
<h2 id="2020-6-28-~-2020-7-6">2020-6-28 ~ 2020-7-6</h2>
<ol>
<li>开发 Safari 浏览器插件 PageQRCode</li>
</ol>
<h2 id="2020-6-22-~-2020-6-24">2020-6-22 ~ 2020-6-24</h2>
<ol>
<li>【装配编辑器】优化样式隔离，</li>
<li>【装配编辑器】实现向配置的 slots 添加或拖入组件</li>
<li>【装配编辑器】初步实现编辑模式，通过p标签的contenteditable验证</li>
</ol>
<h2 id="2020-6-19">2020-6-19</h2>
<ol>
<li>【装配编辑器】实现“手机”即被装配的页面的样式与编辑器的样式隔离</li>
</ol>
<h2 id="2020-6-15-~-2020-6-18">2020-6-15 ~ 2020-6-18</h2>
<ol>
<li>【装配编辑器】实现给“容器组件”加入用于选中插入点的“占位组件”</li>
<li>【装配编辑器】去除外部库依赖，重新实现页面组件嵌套拖动</li>
<li>【装配编辑器】实现删除页面组件</li>
</ol>
<h2 id="2020-6-10-~-2020-6-12">2020-6-10 ~ 2020-6-12</h2>
<ol>
<li>开始开发【装配编辑器】，实现基本布局和基本交互</li>
<li>【装配编辑器】支持页面组件拖动调整顺序，选择高亮</li>
<li>【装配编辑器】实现第一个配置组件：字体属性配置</li>
<li>美化首页，Admin 导航栏</li>
<li>技术调研：尝试在流动布局中实现图文混排，动态在图片覆盖的位置加空白字符 https://jsbin.com/yucucoc/23/edit?html,css,js,output</li>
</ol>
<h2 id="2020-6-8-~-2020-6-9">2020-6-8 ~ 2020-6-9</h2>
<ol>
<li>学习 svelte，可以生成 web component，代码量极小</li>
<li>开始开发组件编辑器：基本布局，简单组件列表展示，点击组件添加到布局舞台并渲染成功</li>
<li>学习 snowpack，尝试使用它代替 webpack，失败</li>
</ol>
<h2 id="2020-6-3-~-2020-6-6">2020-6-3 ~ 2020-6-6</h2>
<ol>
<li>运维：在阿里云成功部署之前开发cwebp镜像到 serverless kuberneters 服务</li>
<li>todo：进一步了解 bit.dev，暂时认为不是很合适作为组件管理与发布工具</li>
<li>todo：京东 Taro 可以编译 React 到包括  Web 在内的多个平台，可考虑使用它作为代码生成器，component json tree -&gt; react -&gt; Taro compile -&gt; multiple platform</li>
<li>todo：了解 virtual-css 相关库，如何动态改变 css 但性能良好，是否可像 virtual-dom 那样 diff 变化并应用到 cssom？</li>
<li>了解 “凡科-轻站小程序与微传单”，UI交互不错，但是性能比较慢。</li>
<li>绘制基本架构图<img src="http://zhongxingdou.github.io/blog//post-images/1591701802084.jpeg" alt="" loading="lazy"></li>
</ol>
<h2 id="2020-6-1-~-2020-6-2">2020-6-1 ~ 2020-6-2</h2>
<ol>
<li>组织管理列表页：显示管理员</li>
<li>实现用户选择通用组件，输入用户名自动完成</li>
<li>重构 store：分模块，声明类型</li>
<li>收集h5制作平台界面图片及了解交互与功能，包括：兔展、易企秀、秀米</li>
</ol>
<h2 id="2020-5-30-~-2020-5-31">2020-5-30 ~ 2020-5-31</h2>
<ol>
<li>学习使用 minikube，kubectl，成功在本地环境部署了 zhongxingdou/cwebp 应用</li>
<li>购买阿里云 serverless kuberneter 服务，未成功部署</li>
</ol>
<h2 id="2020-5-21-~-2020-5-28-6-workday">2020-5-21 ~ 2020-5-28 6 workday</h2>
<ol>
<li>学习 state machine 库 xstate</li>
<li>实现 vue3 有而 vue-composition 没有的 unref, RefValue</li>
<li>使用 xstate 重新实现组织管理</li>
</ol>
<h2 id="2020-5-18-~-2020-5-20">2020-5-18 ~ 2020-5-20</h2>
<ol>
<li>迁移更多类型声明往 type.ts</li>
<li>实现 util.catchPromise，相关类型声明费了不少时间</li>
<li>实现用户列表页</li>
<li>实现团队成员列表页</li>
</ol>
<h2 id="2020-5-14-~-2020-5-15">2020-5-14 ~ 2020-5-15</h2>
<ol>
<li>实现团队（Organization）</li>
<li>实现通用布局组件 ListLayout</li>
<li>登陆优化：支持在密码输入框按“enter”键登陆</li>
</ol>
<h2 id="2020-5-12-~-2020-5-13">2020-5-12 ~ 2020-5-13</h2>
<ol>
<li>使用 Vue compostion API 和模板语言 pug 重构组件管理</li>
<li>抽取出公共 Vue hooks：列表页搜索、翻页与刷新逻辑，支持新建与编辑的表单对话框逻辑</li>
</ol>
<h2 id="2020-5-11">2020-5-11</h2>
<ol>
<li>完成组件管理：包括组件编辑、删除、组件版本新建、删除、修改，以及组件版本在表单页的切换</li>
</ol>
<h2 id="2020-5-9">2020-5-9</h2>
<ol>
<li>完善组件分类</li>
<li>新增组件，组件列表 80%</li>
</ol>
<h2 id="2020-5-8">2020-5-8</h2>
<ol>
<li>service 实现上传与下载文件</li>
<li>实现组件分类管理</li>
</ol>
<h2 id="2020-5-6">2020-5-6</h2>
<ol>
<li>Page 列表页实现编辑与删除，添加创建者列</li>
<li>添加 Element 对 Vue 的扩展的 TypeScript 类型声明</li>
<li>学习 TypeScript 范型相关，为了声明对现存库的扩展</li>
<li>学习 Sequelize belongsTo 关联以及关联后的查询输出</li>
</ol>
<h2 id="2020-4-30">2020-4-30</h2>
<ol>
<li>实现了 Page 列表页</li>
<li>统一包装 service 返回结果</li>
<li>开始在 TechSEA 上班</li>
</ol>
<h2 id="2020-4-29">2020-4-29</h2>
<p>联系了上海前同事，进行了全面介绍，答应后续帮助推广，并赞同方向</p>
<h2 id="2020-4-27">2020-4-27</h2>
<p>支持本地 sqlite3 数据库与本地 nodejs 服务，docker 服务太费笔记本电池</p>
<h2 id="2020-4-24">2020-4-24</h2>
<ol>
<li>实现 PageService</li>
<li>实现 ComponentService</li>
</ol>
<h2 id="2020-4-22">2020-4-22</h2>
<p>实现自动生成 VueRouter 路由</p>
<h2 id="2020-4-20">2020-4-20</h2>
<p>加了后台菜单</p>
<h2 id="2020-4-17">2020-4-17</h2>
<p>实现注册界面</p>
<h2 id="2020-4-12">2020-4-12</h2>
<p>实现登陆界面</p>
<h2 id="2020-4-7">2020-4-7</h2>
<p>实现用户验证服务</p>
<ul>
<li>json-web-token, jsonwebsocket</li>
<li>koa-session</li>
</ul>
<h2 id="2020-3-22">2020-3-22</h2>
<p>开发环境搭建</p>
<ul>
<li>Koa 2</li>
<li>Mysql, Sequelize</li>
<li>Vuejs, Vue CLI</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>http://zhongxingdou.github.io/blog/post/about/</id>
        <link href="http://zhongxingdou.github.io/blog/post/about/">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
        <content type="html"><![CDATA[<p>程序员，正在静心修练。</p>
]]></content>
    </entry>
</feed>